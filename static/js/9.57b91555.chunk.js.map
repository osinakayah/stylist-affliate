{"version":3,"sources":["components/commons/AppDrawer.tsx","containers/profile/Profile.tsx"],"names":["AppDrawer","props","toggleCollapse","setState","showNavBar","state","color","dark","expand","className","onClick","this","id","isOpen","navbar","left","active","activeRoute","to","right","waves","type","placeholder","aria-label","children","PureComponent","Profile","pathname","location","data_people","columns","label","field","sort","rows","xs","lg","md","style","marginTop","round","name","sm","selected","Date","onChange","hint","containerClass","striped","responsive","circle","disabled","aria-hidden"],"mappings":"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","file":"static/js/9.57b91555.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport \"@material/react-drawer/dist/drawer.css\";\nimport './styles/AppDrawerStyless.scss'\nimport {\n    MDBCollapse,\n    MDBFormInline, MDBNavbar,\n    MDBNavbarBrand,\n    MDBNavbarNav,\n    MDBNavbarToggler,\n    MDBNavItem,\n    MDBNavLink\n} from \"mdbreact\";\n\ninterface IProps {\n    activeRoute: string\n}\n\ninterface IState {\n    showNavBar: boolean\n}\n\n\n\nexport default class AppDrawer extends PureComponent<IProps, IState > {\n    constructor(props: any){\n        super(props);\n        this.state = {\n            showNavBar: false\n        }\n    }\n    toggleCollapse = () => {\n        this.setState({ showNavBar: !this.state.showNavBar });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <MDBNavbar color=\"default-color\" dark expand=\"md\">\n                    <MDBNavbarBrand>\n                        <strong className=\"white-text\">Stylists</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler onClick={this.toggleCollapse} />\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.showNavBar} navbar>\n                        <MDBNavbarNav left>\n                            <MDBNavItem active={this.props.activeRoute=== '/product'}>\n                                <MDBNavLink to=\"/product\">Products</MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem active={this.props.activeRoute=== '/profile'}>\n                                <MDBNavLink to=\"/profile\">My Page</MDBNavLink>\n                            </MDBNavItem>\n                        </MDBNavbarNav>\n                        <MDBNavbarNav right>\n                            <MDBNavItem>\n                                <MDBFormInline waves>\n                                    <div className=\"md-form my-0\">\n                                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n                                    </div>\n                                </MDBFormInline>\n                            </MDBNavItem>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","import React, {PureComponent} from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Avatar from 'react-avatar';\nimport {\n    MDBRow,\n    MDBCol,\n    MDBTableBody,\n    MDBTableHead,\n    MDBTable,\n    MDBContainer,\n    MDBInput,\n    MDBPagination,\n    MDBPageItem,\n    MDBPageNav\n} from \"mdbreact\";\n\n\nimport AppDrawer from '../../components/commons/AppDrawer';\n\n\n\ninterface IProps {\n    location: any\n}\n\ninterface IState {\n\n}\n\nclass Profile extends PureComponent<IProps, IState> {\n    render(): React.ReactNode {\n        const {pathname} = this.props.location;\n        const data_people = {\n            columns: [\n                {\n                    label: '#',\n                    field: 'id',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Commission',\n                    field: 'commission',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Date',\n                    field: 'date',\n                    sort: 'desc'\n                },\n            ],\n            rows: [\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n                {\n                    'id': '1',\n                    'name': 'Braid',\n                    'commission': 'Y 200',\n                    'date': 'December 1, 2019',\n                },\n            ]\n        };\n        return (\n            <AppDrawer activeRoute={pathname}>\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol className={'offset-md-5  offset-lg-5 offset-sm-1 mb-lg-0 mb-5 text-center'}  xs={'12'} lg=\"2\" md=\"2\" >\n                            <Avatar style={{marginTop: '12%',}} round name=\"Chinomso Nwachukwu\" />\n                            <h5 className=\"font-weight-bold mt-4 mb-3 text-center\">Chinomso Nwachukwu</h5>\n                            <p className=\"text-uppercase blue-text text-center\">Expert Sales Rep</p>\n                        </MDBCol>\n                    </MDBRow>\n\n                    <MDBRow className={'ml-3'}>\n                        <MDBCol xs={'12'} sm={'6'} className={'mt-3'} >\n                            <span> From: <DatePicker\n                                selected={new Date()}\n                                onChange={()=>{}}\n                            /></span>\n                        </MDBCol>\n                        <MDBCol xs={'12'} sm={'6'} className={'mt-3'}>\n                            <span> To: <DatePicker\n                                selected={new Date()}\n                                onChange={()=>{}}\n                            /></span>\n                        </MDBCol>\n                        <MDBCol xs={'12'} sm={'6'} className={'mt-2'}>\n                            <div className=\"input-group sm-form form-sm form-1 pl-0\">\n                                <MDBInput hint=\"Search\" type=\"text\" containerClass=\"active-pink active-pink-2 mt-0 mb-3\" />\n                            </div>\n                        </MDBCol>\n\n                    </MDBRow>\n\n                    <MDBTable striped responsive>\n                        <MDBTableHead columns={data_people.columns}/>\n                        <MDBTableBody rows={data_people.rows} />\n                    </MDBTable>\n                    <MDBRow>\n                        <MDBPagination circle>\n                            <MDBPageItem disabled>\n                                <MDBPageNav className=\"page-link\">\n                                    <span>First</span>\n                                </MDBPageNav>\n                            </MDBPageItem>\n                            <MDBPageItem disabled>\n                                <MDBPageNav className=\"page-link\" aria-label=\"Previous\">\n                                    <span aria-hidden=\"true\">&laquo;</span>\n                                    <span className=\"sr-only\">Previous</span>\n                                </MDBPageNav>\n                            </MDBPageItem>\n                            <MDBPageItem active>\n                                <MDBPageNav className=\"page-link\">\n                                    1 <span className=\"sr-only\">(current)</span>\n                                </MDBPageNav>\n                            </MDBPageItem>\n                            <MDBPageItem>\n                                <MDBPageNav className=\"page-link\">\n                                    2\n                                </MDBPageNav>\n                            </MDBPageItem>\n\n                            <MDBPageItem>\n                                <MDBPageNav className=\"page-link\">\n                                    &raquo;\n                                </MDBPageNav>\n                            </MDBPageItem>\n                        </MDBPagination>\n                    </MDBRow>\n                </MDBContainer>\n\n            </AppDrawer>\n        );\n    }\n}\n\nexport default Profile;\n"],"sourceRoot":""}