/** Declaration file generated by dts-gen */

export class Cache {
    constructor(...args: any[]);

    get(key: any): any;

    hasSourceFailedBefore(source: any): any;

    set(key: any, value: any): void;

    sourceFailed(source: any): any;

}

export class ConfigProvider {
    constructor(...args: any[]);

    getChildContext(): any;

    render(): any;

    static displayName: string;

}

export class TwitterSource {
    constructor(props: any);

    getImageSize(): any;

}

export class ValueSource {
    constructor(props: any);

    getColor(): any;

    getInitials(): any;

    getValue(): any;

}

export function FacebookSource(props: any): any;

export function GithubSource(props: any): any;

export function GoogleSource(props: any): any;

export function GravatarSource(_props: any): any;

export function IconSource(props: any): any;

export function RedirectSource(network: any, property: any): any;

export function SkypeSource(props: any): any;

export function SrcSource(props: any): any;

export function createAvatarComponent(_ref: any, ...args: any[]): any;

export function getRandomColor(value: any, ...args: any[]): any;

export namespace ConfigProvider {
    namespace childContextTypes {
        function reactAvatar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace reactAvatar {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function avatarRedirectUrl(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function cache(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function colors(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function initials(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace avatarRedirectUrl {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace cache {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace colors {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace initials {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FacebookSource {
    namespace propTypes {
        function facebookId(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace facebookId {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace GithubSource {
    namespace propTypes {
        function githubHandle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace githubHandle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace GoogleSource {
    namespace propTypes {
        function googleId(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace googleId {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace GravatarSource {
    namespace propTypes {
        function email(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function md5Email(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace email {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace md5Email {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace IconSource {
    namespace propTypes {
        function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace color {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SkypeSource {
    namespace propTypes {
        function skypeId(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace skypeId {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SrcSource {
    namespace propTypes {
        function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace src {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TwitterSource {
    namespace propTypes {
        function twitterHandle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace twitterHandle {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ValueSource {
    namespace propTypes {
        function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function email(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function initials(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function maxInitials(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function name(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace color {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace email {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace initials {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace maxInitials {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace name {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace value {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

